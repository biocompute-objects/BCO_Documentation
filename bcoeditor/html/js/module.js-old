var objList1 = {};
var childList = {};
var isMain = {};
var nodeid2name = {};
var nodeid2index = {};
var treeJson = [];
var toggleCount = {};
var seenNode = {};
var objListForSelection = [];
var isMulti = {};
var rowsHash = [{}, {}, {}];
var selectedDomain = "provenance_domain";   
var topTypeId = 0;
var fieldInfoHash = {"type":{}, "is_multi_fg":{}};


var fieldGroups = {
	"authors":["authors"]
	,"single_collectors":["empirical_error", "algorithmic_error", "xref","github_extension", "fhir_extension"]
	,"multi_collectors":["env_parameters", "prerequisites", "access_prerequisites"]
	,"pipeline_steps":["pipeline_steps"]
};

var queryFormJson = {
        "boxlist":[[
                {
                        "name":"searchfield1", "class":"searchElement1A", 
                        "type":"select",
                        "options":{
                                "name":"Data type name",
				"type_id":"Data type ID",
				"createdBy":"Data type author"
                        }
			,"style":"width:100%;height:30px;padding:3;border:1px solid #fff;"
                	,"containerwidth":"25%"
			,"boxlabel":"Select search field"
		}
        	,{
                        "name":"searchvalue1", "class":"searchElement1A",  "value":"*"
                        ,"type":"text", 
                        "style":"width:100%;height:30px;padding:3;border:1px solid #fff;"
                	,"containerwidth":"65%"
			,"boxlabel":"Enter search value"
		}
		,{
                	"name":"searchbtn", "class":"searchbtncls", "value":" Search "
                	,"type":"submit", "readonly":false
                	,"style":"width:100%;height:30px;"
        		,"containerwidth":"10%"
		}
	]]
        ,"advanced":false
};













//////////////////////////////////////
jQuery.fn.center = function () {
    this.css("position","absolute");
    this.css("top", Math.max(0, (($(window).height() - $(this).outerHeight()) / 2) + 
                                                $(window).scrollTop()) + "px");
    this.css("left", Math.max(0, (($(window).width() - $(this).outerWidth()) / 2) + 
                                                $(window).scrollLeft()) + "px");
    return this;
}



//////////////////////////////////////
$(document ).ready(function() {
  var sections = getSections();
  $("#sectionscn").html(sections);
  setPageCn(pageid, "", "");
});

///////////////////////////////////////////////////
$(document).on('click', '#closemodulemenu', function (event) {
        event.preventDefault();
        $("#sectionscn").css("display", "none");
});



//////////////////////////////////////
$(document).on('click', '.helpicon', function (event) {
        event.preventDefault();
        var jqSpanId = "#" + this.id + "_text";
	$(jqSpanId).toggle();


});



//////////////////////////////////////
$(document).on('click', '.formsection1', function (event) {
        event.preventDefault();
        selectedDomain = this.id;
	rowsHash = [{}, {}, {}];
	seenNode = {};
	setEditPage();

});


//////////////////////////////////////
$(document).on('click', '.formsection2', function (event) {
        event.preventDefault();
        selectedDomain = this.id;
	rowsHash = [{}, {}, {}];
	seenNode = {};
	setEditPage();
});

  

//////////////////////////////////////
$(document).on('click', '.section1', function (event) {
	event.preventDefault();
	pageid = this.id;

	typeId = (event.target.id == undefined ? typeId : event.target.id);
        typeId = (typeId  == '' ? '258' : typeId);
        objId = (event.target.id == undefined ? objId : event.target.id);

      	setPageCn(pageid, typeId, objId);

      	var sections = getSections();
      	$("#sectionscn").html(sections);
});


//////////////////////////////////////
$(document).on('click', '.attributecollector', function (event) {
        event.preventDefault();
        var linkId = this.id;
	var actionFlag = linkId.split("_")[1];

	if (actionFlag == "addref"){
		var attrName = $("#attr_name").val().trim();
                var attrValue = $("#attr_value").val().trim();
		var optTxt =  JSON.stringify({"name":attrName, "URI":attrValue});
		$("select[name='attribute_container']").append($('<option>', {value:optTxt, text:optTxt}));
	}
	else if (actionFlag == "add"){
		var attrHash = {};
		//Collect attributes already in the bin
		var selectorId = $("select[name='attribute_container']").attr("id");
                var targetId = '#' + selectorId + ' option';
		var myList = $.map($(targetId), function(elt, i) { return $(elt).text();});
		for (var i in myList){
			var attrName = Object.keys(JSON.parse(myList[i]))[0];
                	var attrValue = Object.values(JSON.parse(myList[i]))[0];
			attrHash[attrName] = attrValue;
		}
		//Add the new one
		var attrName = $("#attr_name").val().trim();
        	var attrValue = $("#attr_value").val().trim();
		if(attrName != "" && attrValue != ""){
			var attrValList = attrValue.split("\n");
			if (attrValList.length > 1){
				attrHash[attrName] = attrValList;
			}
			else{
				attrHash[attrName] = attrValue;
			}
		}
		
		//Empty bin and fill it up again
		$("select[name='attribute_container']").empty();
		for (var attrName in attrHash){
			var tmpHash = {};
			tmpHash[attrName] = attrHash[attrName];
			var optTxt =  JSON.stringify(tmpHash);
			$("select[name='attribute_container']").append($('<option>', {value:optTxt, text:optTxt}));
		}
	}
	else if (actionFlag == "rm"){
		var selectorId = $("select[name='attribute_container']").attr("id");
		var targetId = '#' + selectorId + ' option:selected';
		$(targetId).each(function (index, option) {
			$(option).remove();
		});
	}
	else if (actionFlag == "up"){
		var selectorId = $("select[name='attribute_container']").attr("id");
                var targetId = '#' + selectorId + ' option:selected';
                $(targetId).prev().insertAfter($(targetId));
        }
        else if (actionFlag == "down"){
                var selectorId = $("select[name='attribute_container']").attr("id");
                var targetId = '#' + selectorId + ' option:selected';
                $(targetId).next().insertBefore($(targetId));
        }
	
	if (actionFlag == "edit"){
		var selectorId = $("select[name='attribute_container']").attr("id");
                var targetId = '#' + selectorId + ' option:selected';
		var tmpObj = JSON.parse($(targetId).text());
                var attrName = Object.keys(tmpObj)[0];
		var attrValue = Object.values(tmpObj)[0];
		$("#attr_name").val(attrName);
		if (typeof attrValue == "string"){
			$("#attr_value").val(attrValue);
		}
		else{
			$("#attr_value").val(attrValue.join("\n"));
		}
	}
	else{
		$("#attr_name").val("");
		$("#attr_value").val("");
	}
});


//////////////////////////////////////
$(document).on('click', '#submitobjselection', function (event) {
        event.preventDefault();

	var fieldName = $("input[name='fieldname']").val();
	var is_multi_fg = $("input[name='is_multi_fg']").val();

	var emId = fieldName.split(".").join("_");
	var targetId = '#' + emId + '';

	var seenVal = {};
	$(targetId).find('option').each(function() {
    		var optValue = $(this).val();
		seenVal[optValue] = 1;
	});               


	if(is_multi_fg == 0){
		$(targetId).empty();
	}


	var emList = $("input[name='objids']:checked");
	var records = [];
        for(var i=0; i < emList.length; i++){
		var parts = emList[i].value.split(" ");
		var val = parts.shift();
		var lbl = parts.join(" ");
		//if(!(val in seenVal)){
			$(targetId).append($('<option>', {value:val, text:lbl}));
        	//}
	}
	$("#popdiv1").remove();
        $("#popdiv2").remove();
        $("#popdiv").remove();
	$("#bgdiv").remove();
	
});


////////////////////////
$(document).on('click', '#submitfreetxtinput', function (event) {
        event.preventDefault();

        var fieldName = $("input[name='fieldname']").val();
        var is_multi_fg = $("input[name='is_multi_fg']").val();

	var emId = fieldName.split(".").join("_");
        var targetId = '#' + emId + '';
	if(is_multi_fg == 0){
                $(targetId).empty();
        }

	var parts = fieldName.split("_");
	parts.pop();
	var newFieldName = parts.join("_");

	if(fieldGroups["authors"].indexOf(newFieldName) != -1){
		var lines1 = $("#freetxtinput").val().trim().split("\n");
		var lines2 = $("#freetxtinputextra").val().trim().split("\n");
		var inputValueIndex = $("#freetxtinputindex").val();
                if(inputValueIndex == 1){ //For editing single existing item
			var optTxt = (lines1[0] != "" ? JSON.stringify({"orcid": lines1[0]}) : 
					JSON.stringify({"name": lines2[0]}));
			//var optTxt = (lines1[0] != "" ?  lines1[0] : lines2[0]);
			var newTargetId = targetId + ">option:selected";
			$(newTargetId).text(optTxt);
		}
		else{ //For adding new items
			for (var i in lines1){
                		if(lines1[i].trim() != ""){
					var optTxt = JSON.stringify({"orcid": lines1[i]});
					$(targetId).append($('<option>', {value:optTxt, text:optTxt}));
        			}
			}	
			for (var i in lines2){
                        	if(lines2[i].trim() != ""){
					var optTxt =  JSON.stringify({"name": lines2[i]});
					$(targetId).append($('<option>', {value:optTxt, text:optTxt}));
                		}
			}
		}
	}
	else if(fieldGroups["pipeline_steps"].indexOf(newFieldName) != -1){
                var fieldList = ["tool_name", "tool_desc", "tool_package", "tool_version",  "step_number"];
                var tmpObj = {"reference_files":[], "input_uri_list":[], "output_uri_list":[]};
                for (var i in fieldList){
                        tmpObj[fieldList[i]] = $("input[name='"+fieldList[i]+"']").val();
                }
                var lines = $("textarea[name='input_uri_list']").val().trim().split("\n");
                for (var i in lines){
                        if(lines[i].trim() != ""){
                                tmpObj["input_uri_list"].push(lines[i].trim());
                        }
                }
                var lines = $("textarea[name='output_uri_list']").val().trim().split("\n");
                for (var i in lines){
                        if(lines[i].trim() != ""){
                                tmpObj["output_uri_list"].push(lines[i].trim());
                        }
                }

                var container = '#attribute_container option';
                $(container).each(function() {
                        var val = $(this).text();
                        tmpObj["reference_files"].push(JSON.parse(val));
                });

                var optTxt = JSON.stringify(tmpObj);
                var inputValueIndex = $("#freetxtinputindex").val();
                if(inputValueIndex == 1){ //For editing single existing item
                        var newTargetId = targetId + ">option:selected";
                        $(newTargetId).text(optTxt);
                }
		else{ //Add new item
                        $(targetId).append($('<option>', {value:optTxt, text:optTxt}));
                }
        }
	else if (fieldInfoHash["type"][newFieldName] == "obj" && fieldInfoHash["is_multi_fg"][newFieldName] == 0){
	//else if (fieldGroups["single_collectors"].indexOf(newFieldName) != -1){
		var tmpObj = {};
		var container = '#attribute_container option';
                $(container).each(function() {
			var val = $(this).text();
			var obj = JSON.parse(val);
			for (var k in obj){
				tmpObj[k] = obj[k];
			}
                });
		var optTxt = JSON.stringify(tmpObj);
		//var newTargetId = targetId + ">option:selected";
		$(targetId).children('option').remove();
		$(targetId).append('<option value="'+optTxt+'">'+optTxt+'</option>');
	}
	else if (fieldInfoHash["type"][newFieldName] == "obj" && fieldInfoHash["is_multi_fg"][newFieldName] == 1){
	//else if (fieldGroups["multi_collectors"].indexOf(newFieldName) != -1){
                var tmpObj = {};
                var container = '#attribute_container option';
                $(container).each(function() {
                        var val = $(this).text();
                        var obj = JSON.parse(val);
                        for (var k in obj){
                                tmpObj[k] = obj[k];
                        }
                });
                var optTxt = JSON.stringify(tmpObj);
                var inputValueIndex = $("#freetxtinputindex").val();
                if(inputValueIndex == 1){ //For editing single existing item
                        var newTargetId = targetId + ">option:selected";
                        $(newTargetId).text(optTxt);
                }
                else{
                        $(targetId).append($('<option>', {value:optTxt, text:optTxt}));
                }
        }
	else{
		var inputValue = $("#freetxtinput").val();
        	var inputValueIndex = $("#freetxtinputindex").val();
		var lines = inputValue.split("\n");
		if (inputValueIndex != undefined){
			var optTxt = lines[0];
                        var newTargetId = targetId + ">option:selected";
			$(newTargetId).text(optTxt);
		}
		else{
        		for (var i in lines){
                		var optTxt = lines[i];
                		$(targetId).append($('<option>', {value:optTxt, text:optTxt}));
        		}
		}
	}



	$("#popdiv1").remove();
        $("#popdiv2").remove();
        $("#popdiv").remove();
        $("#bgdiv").remove();

});



$(document).on('click', '#closewindow', function (event) {
        event.preventDefault();
	$("#popdiv1").remove();
	$("#popdiv2").remove();
	$("#popdiv").remove();
	$("#bgdiv").remove();

});



$(document).on('click', '#msgtxt', function (event) {
        event.preventDefault();
	$("#taskstatus").css("display", "none");
});





////////////////////////////////////////////
$(document).on('click', '.addeditcontainer', function (event) {
        event.preventDefault();

	var parts = this.id.split("_");
	var addEditFlag = parts.shift();
	var fieldName = parts.join("_");
	var is_multi_fg = getUrlVariable($(this).attr("href"), "is_multi_fg");
        setFreeTextInputFrame(fieldName, is_multi_fg);
	$("#popdiv").center();

	
	var cn = getPopUpForm(fieldName, addEditFlag);
	cn += (addEditFlag == "edit" ? '<input type=hidden id=freetxtinputindex value="1">' : "");
	$("#popdiv2").html(cn);

});



/////////////////////////////////////////////
function getPopUpForm (fieldName, addEditFlag){


	var parts = fieldName.split("_");
	parts.pop();
        var fName = parts.join("_");

		
	var targetId = '#' + fieldName;
	var values = $(targetId).val() || [];
	targetId = '#' + fieldName + ">option:selected";
	var labels = $(targetId).map(function(){ return $(this).text();}).get();


	var s = 'width:100%;height:100px;';
	var sbox = 'width:100%;height:40px;';
	var cn = "";	
	if(fieldGroups["authors"].indexOf(fName) != -1){
		var val1 = "";
		var val2 = "";
		if(addEditFlag == "edit"){
			var obj = JSON.parse(labels[0]);
                	val1 = ("orcid" in obj ? obj["orcid"] : '');
                	val2 = ("name" in obj ? obj["name"] : '');
               	} 
		cn = '<table width=800 border=0>' +
                        '<tr><td width=45%>Use new line for entering multiple ORCID values</td>' +
                        '<td></td><td width=45%>Use new line for entering multiple names</td></tr>' +
                        '<tr><td><textarea id=freetxtinput style="'+s+'" value="">'+val1+'</textarea></td>' +
                        '<td align=center>OR</td>' +
                        '<td><textarea id=freetxtinputextra style="'+s+'" value="">'+val2+'</textarea></td></tr>' +
                        '</table>';
	}
	else if (fieldGroups["pipeline_steps"].indexOf(fName) != -1){
		$("#popdiv").css("height", "840px");
                $("#popdiv2").css("height", "690px");
                $("#popdiv").css("top", "50px");
                $("#popdiv1").css("top", "30px");
                $("#popdiv2").css("top", "60px");



		var obj = {};
		if(addEditFlag == "add"){
			obj = {"tool_name":"", "tool_desc":"", "tool_package":"", "tool_version":"",  
				"step_number":"", "input_uri_list":[], "output_uri_list":[], "reference_files":[]};
		}               
		else{
			obj = JSON.parse(labels[0]);
		}
 
		var emList = [];
                var emInfoObj = {type:"text", label:"",style:"width:200px;padding:3;", readonly:false};
                emList.push(getInputElement("tool_name", "", obj["tool_name"], emInfoObj));
                var emInfoObj = {type:"text", label:"",style:"width:450px;padding:3;", readonly:false};
                emList.push(getInputElement("tool_desc", "", obj["tool_desc"], emInfoObj));
                var emInfoObj = {type:"text", label:"",style:"width:200px;padding:3;", readonly:false};
                emList.push(getInputElement("tool_package", "", obj["tool_package"], emInfoObj));
                var emInfoObj = {type:"text", label:"",style:"width:200px;padding:3;", readonly:false};
                emList.push(getInputElement("tool_version", "", obj["tool_version"], emInfoObj));
                var emInfoObj = {type:"number", label:"",style:"width:200px;padding:3;", readonly:false};
                emList.push(getInputElement("step_number", "", obj["step_number"], emInfoObj));

                var emInfoObj = {type:"textarea", label:"",style:s, readonly:false};
                var emValue = obj["input_uri_list"].join("\n");
                emList.push(getInputElement("input_uri_list", "", emValue, emInfoObj));
                var emInfoObj = {type:"textarea", label:"",style:s, readonly:false};
                var emValue = obj["output_uri_list"].join("\n");
                emList.push(getInputElement("output_uri_list", "", emValue, emInfoObj));

		var emInfoObj = {type:"text", label:"",style:"width:100%;padding:3;",
                                        readonly:false, placeholder:"Reference name"};
                emList.push(getInputElement("attr_name", "", "", emInfoObj));
                var emInfoObj = {type:"text", label:"",style:"width:100%;padding:3;",
                                        readonly:false, placeholder:"Reference URI"};
                emList.push(getInputElement("attr_value", "", "", emInfoObj));

		var s = 'padding:3 3 3 3;width:200px;background:#fff;height:75px;';
                var refList = [];
                for (var j in obj["reference_files"]){
                        refList.push(JSON.stringify(obj["reference_files"][j]));
                }

		var emInfoObj = {type:"select-multi",  label:"",style:"width:100%;height:150;padding:3;",
                                        readonly:false, list:refList};
                emList.push(getInputElement("attribute_container", "", "", emInfoObj));
                var addLink = '<a class="attributecollector" id="attribute_addref" href="#">Add new</a>';
                var rmLink = '<a class="attributecollector" id="attribute_rm" href="#">Remove selected</a>';


	
		cn = '<table width=700 border=0 style="font-size:13px;color:#777;margin:10px;">' +
			'<tr>' + 
				'<td width=250>Tool name (one word)<br>'+emList[0]+'</td>' + 
				'<td colspan=2>Tool description<br>'+emList[1]+'</td>' +
			'</tr>' +
			'<tr>' +
                        	'<td width=250><br><br>Package<br>'+emList[2]+'</td>' +
                        	'<td width=250><br><br>Version<br>'+emList[3]+'</td>' +
                        	'<td><br><br>Step number<br>'+emList[4]+'</td>' +
                	'</tr>' +
			'<tr>' +
                	'<td colspan=3><br><br>Input URI list (use new line for multiple entries)<br>' + 
					emList[5]+ '</td>' + 
			'</tr>' +
                	'<tr>' +
                 '<td colspan=3><br>Output URI list (use new line for multiple entries)<br>' + emList[6]+ '</td>' + 
                '</tr>' +
		'<tr><td colspan=2><br><br>Reference objects</td><td align=right><br><br>'+rmLink+'</td></tr>' +
                '<tr><td colspan=3 valign=top>'+ emList[9] +'</td></tr>' +
                '<tr style="font-size:10px;"><td width=45%>'+ emList[7] +'</td><td width=45%>'+emList[8] +
                        '</td><td style="font-size:13px;">'+addLink + '</td></tr>' +
		'</table>';
	}
	else if (fieldInfoHash["type"][fName] == "obj"){
                $("#popdiv").css("height", "420px");
                $("#popdiv2").css("height", "300px");
                $("#popdiv").css("top", "80px");
                $("#popdiv1").css("top", "30px");
                $("#popdiv2").css("top", "60px");
                if(addEditFlag == "add"){
                        labels = [];
                }
                var optList = [];
                if (labels.length > 0){
                        var obj = JSON.parse(labels[0]);
                        for (var k in obj){
                                var tmpObj = {};
                                tmpObj[k] = obj[k];
                                optList.push(JSON.stringify(tmpObj));
                        }
                }
		var emInfoObj = {type:"text", label:"",style:"width:100%;padding:3;",
                                        readonly:false, placeholder:"key name"};
                var nameBox = getInputElement("attr_name", "", "", emInfoObj);
                var emInfoObj = {type:"textarea", label:"",style:"width:100%;padding:3;", rows:5,
                                        readonly:false, placeholder:"new line separated values"};
                var valueBox = getInputElement("attr_value", "", "", emInfoObj);
                var emInfoObj = {type:"select-multi",  label:"",style:"width:100%;height:150px;padding:3;",
                                        readonly:false, list:optList};
                var containerBox = getInputElement("attribute_container", "", "", emInfoObj);
                var addLink = '<a class="attributecollector" id="attribute_add" href="#">Add/Update</a>';
                var rmLink = '<a class="attributecollector" id="attribute_rm" href="#">Remove</a>';
                var upLink = '<a class="attributecollector" id="attribute_up" href="#">Up</a>';
                var downLink = '<a class="attributecollector" id="attribute_down" href="#">Down</a>';
                var editLink = '<a class="attributecollector" id="attribute_edit" href="#">Edit</a>';
                var cancelLink = '<a id="closewindow" href="#">Cancel</a>';
                var submitLink = '<a id="submitfreetxtinput" href="#">Submit</a>';
                var topLinks = editLink + '&nbsp;&nbsp;|&nbsp;&nbsp;'
                topLinks += rmLink;
                cn = '<table width=95% border=0 style="font-size:13px;color:#777;margin:10px;">' +
                '<tr><td width=20% colspan=2>Object as a collection of attributes</td><td align=right>'+
                        topLinks+'</td></tr>' +
                '<tr height=150><td colspan=3 valign=top>'+ containerBox +'</td></tr>' +
                '<tr style="font-size:10px;"><td width=25% valign=top>'+ nameBox + 
				'</td><td width=65% valign=top>'+ valueBox +
                        '</td><td style="font-size:13px;" valign=top>'+addLink + '</td></tr>' +
                '</table>';
	}
	else{
		var buffer = (addEditFlag == "add" ? "": labels[0]);
		cn = '<table width=800 border=0>' +
                        '<tr><td>Use new line for entering multiple values</td></tr>' +
                        '<tr><td><textarea id=freetxtinput style="'+s+'">'+buffer+'</textarea></td></tr>' +
                        '</table>';
	}
	return cn;
}

        

//////////////////////////////////////////
$(document).on('click', '.addobjvalue__old', function (event) {
      	event.preventDefault();

	var fieldName = this.id.substring(6);
        var is_multi_fg = getUrlVariable($(this).attr("href"), "is_multi_fg");
	setObjectSelectorFrame(fieldName, is_multi_fg);

	$("#popdiv").center();
	$("#popdiv2").html(getWaitMsg());


	var url = cgiRoot + '/servlet.cgi';
        var reqObj = new XMLHttpRequest();
        reqObj.open("POST", url, true);
        reqObj.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        reqObj.onreadystatechange = function() {
                if (reqObj.readyState == 4 && reqObj.status == 200) {
                        ////console.log('response='+reqObj.responseText);
                        var jsonResponse = JSON.parse(reqObj.responseText);
			objListForSelection = []
			if(jsonResponse["taskStatus"] == 1){
                              	objListForSelection = jsonResponse["objlist"];
				renderObjectSelectorTable(fieldName, is_multi_fg);
                        }
                        else{
                                $("#popdiv2").html("Noooo");
                                //$("#taskstatus").html(jsonResponse["errorMsg"]);
                        }
                }
        };
        var postData = 'mode=json&svc=getFieldObjects&fieldName=' + fieldName;
        reqObj.send(postData);
        //console.log('request='+postData);
       
});


$(document).on('click', '.rmobjvalue', function (event) {
      	event.preventDefault();

	//var fieldName = this.id.substring(6);
	//var targetId = '#' + fieldName;
	//var emList = $(targetId).val();
	//for(var i in emList){
	//	var tId = '#' + fieldName + ' option[value="'+emList[i]+'"]';
        //        $(tId).remove();
        //}

	var fieldName = this.id.substring(6);
        var targetId = '#' + fieldName + ' option:selected';
        $(targetId).each(function (index, option) {
                $(option).remove();
        });



});


////////////////////////////////////////////
$(document).on('click', '.rmfreetxtvalue', function (event) {
        event.preventDefault();

        var fieldName = this.id.substring(6);
	var targetId = '#' + fieldName + ' option:selected';
	$(targetId).each(function (index, option) { 
                $(option).remove(); 
	});  

});


////////////////////////////////////////////
$(document).on('click', '.movefreetxtvalue', function (event) {
        event.preventDefault();

        var fieldName = this.id.substring(6);
        var targetId = '#' + fieldName + ' option:selected';
	if (this.id.substring(0,5) == "movup"){
		$(targetId).prev().insertAfter($(targetId));
	}
	else{
		$(targetId).next().insertBefore($(targetId));
	}

});




   
$(document).on('click', '.nodelink', function (event) {
      	event.preventDefault();
      	nodeid = this.id;
	var cn = 'No content'
	if(nodeid in childList){
		cn = getBranchView(nodeid);
		$("#searchresults").html(cn );
	}
      	else{
		pageid = '12';
		typeId = (event.target.id == undefined ? typeId : event.target.id);
        	typeId = (typeId  == '' ? '258' : typeId);
        	objId = (event.target.id == undefined ? objId : event.target.id);
		setPageCn(pageid, typeId, objId);
      		var sections = getSections();
      		$("#sectionscn").html(sections);
	}
});

   
$(document).on('click', '.editnodelink', function (event) {
      	event.preventDefault();
      	nodeid = this.id;
      	pageid = '12';
      
	typeId = (event.target.id == undefined ? typeId : event.target.id);
	typeId = (typeId  == '' ? '258' : typeId);
	objId = (event.target.id == undefined ? objId : event.target.id);
	setPageCn(pageid, typeId, objId);
	
      	var sections = getSections();
      	$("#sectionscn").html(sections); 
  
});

   
$(document).on('click', '.fieldlbl', function (event) {
	event.preventDefault();
	var parts = this.id.split('|');
	var id =  "#fieldset" + parts[1];
	$(id).toggle();
	toggleCount[id] = (toggleCount[id] == undefined ? 1 : toggleCount[id] + 1);

});


$(document).on('click', '.savebtncls', function (event) {
        event.preventDefault();
	seenNode = {};
	saveBiocomputeObject();

});

$(document).on('click', '.dupbtncls', function (event) {
        event.preventDefault();
        seenNode = {};
        dupBiocomputeObject();

});



$(document).on('click', '.searchbtncls', function (event) {
        event.preventDefault();
	pageid = 'search';
	setTypeSearchPage();

});






$(document).on('click', '#moduleicon', function (event) {
        event.preventDefault();

	$("#sectionscn").toggle();
	//$("#sectionscn").css("display", "block");
	//$("#sectionscn").toggle();

});


/////////////////////////////////////////////
$(document).on('click', '#jsonview', function (event) {
        event.preventDefault();

	setJsonViewFrame();
        $("#popdiv").center();

	var url = cgiRoot + '/servlet.cgi';
        var reqObj = new XMLHttpRequest();
        reqObj.open("POST", url, true);
        reqObj.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        reqObj.onreadystatechange = function() {
                if (reqObj.readyState == 4 && reqObj.status == 200) {
                        //console.log(reqObj.responseText);
			//var cn = '<pre>' + reqObj.responseText + '</pre>';
			var cn =  '<textarea name=xx style="width:100%;padding:10;border:0px solid;" rows=1000>' + 
				reqObj.responseText + '</textarea>';
			$("#popdiv2").html(cn);
		   }
        };
        var postData = 'mode=json&svc=getJsonView&objId='+objId;
        reqObj.send(postData);
        console.log('request='+postData);
});




/////////////////////////
function setJsonViewFrame(){

	var s = "padding:2px 20px 2px 20px;";
        var closebtn = '<input name=btn2 id=closewindow type=submit style="'+s+'" value="Close">';
        var table = '<table width=100% style="font-size:13px;" border=0>' +
                        '<tr height=25><td align=right>' + closebtn + '</td></tr>' +
                        '</table>';

        var s = 'position:absolute;left:50px;top:10px;width:1020px;height:20px;';
        s += 'filter: alpha(opacity=100);opacity: 1.00;z-index:1003';
        var div1 = '<DIV id=popdiv1 style="'+s+'">'+table+'</DIV>';


        var s = 'position:absolute;left:50px;top:50px;width:1000px;height:750px;overflow:auto;';
        s += 'background:#fff;filter: alpha(opacity=100);opacity: 1.00;z-index:1002;padding:10;';
        var div2 = '<DIV id=popdiv2 style="'+s+'"></DIV>';

        var s = 'position:absolute;width:1100px;height:850px;top:300px;';
        s += 'background:#eee;filter: alpha(opacity=100);opacity: 1.00;z-index:1001;';
        var popdiv = '<DIV id=popdiv style="'+s+'">'+ div1 + div2+'</DIV>';

	
        var s = 'position:absolute;left:0px;top:0px;width:100%;height:3000px;background:#000;color:#fff;';
        s += 'filter: alpha(opacity=75);z-index:1000;';
        s += 'opacity: 0.75;';
        var bgdiv = '<DIV id=bgdiv style="'+s+'"></DIV>';


        var cn = 'xxxx';
        $("body").append(bgdiv + popdiv);

        return;
}




/////////////////////////
function setFreeTextInputFrame(fieldName, is_multi_fg){

	var s = "padding:2px 20px 2px 20px;";
        var submitbtn = '<input name=btn1 id=submitfreetxtinput type=submit style="'+s+'" value="Submit">';
        var closebtn = '<input name=btn2 id=closewindow type=submit style="'+s+'" value="Cancel">';
        var table = '<table width=100% style="font-size:13px;" border=0>' +
                        '<tr height=25><td align=right>'+submitbtn + ' &nbsp; ' + closebtn + '</td></tr>' +
                        '</table>';


        var s = 'position:absolute;left:50px;top:200px;width:800px;height:50px;';
        s += 'filter: alpha(opacity=100);opacity: 1.00;z-index:1003;';
        var div1 = '<DIV id=popdiv1 style="'+s+'">'+table+'</DIV>';

        var s = 'position:absolute;left:50px;top:50px;width:800px;height:150px;overflow:auto;';
        s += 'background:#fff;filter: alpha(opacity=100);opacity: 1.00;z-index:1002;text-align:center;';
        var div2 = '<DIV id=popdiv2 style="'+s+'"></DIV>';

        var s = 'position:absolute;width:900px;height:300px;';
        s += 'background:#eee;filter: alpha(opacity=100);opacity: 1.00;z-index:1001;';
        var popdiv = '<DIV id=popdiv style="'+s+'">'+div1 + div2+'</DIV>';
        
        var s = 'position:absolute;left:0px;top:0px;width:100%;height:3000px;background:#000;color:#fff;';
        s += 'filter: alpha(opacity=75);z-index:1000;';
        s += 'opacity: 0.75;';
        var bgdiv = '<DIV id=bgdiv style="'+s+'"></DIV>';


	var cn = '<input type=hidden name=fieldname value="'+fieldName+'">';
	cn += '<input type=hidden name=is_multi_fg value="'+is_multi_fg+'">';
        
	var hndiv = '<DIV id=hndiv style=""></DIV>';

        $("body").append(bgdiv + popdiv + hndiv);
	$("#hndiv").html(cn);
        
	return;
}




/////////////////////////
function setObjectSelectorFrame(fieldName, is_multi_fg){

 	var submitbtn = '<input name=btn1 id=submitobjselection type=submit value="Submit selected objects">';
        var closebtn = '<input name=btn2 id=closewindow type=submit value="Close window">';
        var table = '<table width=100% style="font-size:13px;background:#eee;" border=0>' +
                        '<tr height=25><td valign=bottom>Select object</td>'+
                                '<td valign=bottom align=right>'+submitbtn + ' &nbsp; ' +
                                        closebtn + '</td></tr>' +
                        '</table>';
        var s = 'position:absolute;left:50px;top:50px;width:800px;height:25px;';
        s += 'background:#fff;filter: alpha(opacity=100);opacity: 1.00;z-index:1003;';
        var div1 = '<DIV id=popdiv1 style="'+s+'">'+table+'</DIV>';

        var s = 'position:absolute;left:50px;top:85px;width:800px;height:400px;overflow:auto;';
        s += 'background:#fff;filter: alpha(opacity=100);opacity: 1.00;z-index:1002;';
        var div2 = '<DIV id=popdiv2 style="'+s+'"></DIV>';

	var s = 'position:absolute;width:900px;height:800px;';
        s += 'background:#eee;filter: alpha(opacity=100);opacity: 1.00;z-index:1001;';
	var popdiv = '<DIV id=popdiv style="'+s+'">'+div1 + div2+'</DIV>';


        var s = 'position:absolute;left:0px;top:0px;width:100%;height:3000px;background:#000;color:#fff;';
        s += 'filter: alpha(opacity=75);;z-index:1000;';
        s += 'opacity: 0.75;';
        var bgdiv = '<DIV id=bgdiv style="'+s+'"></DIV>';


	var cn = '<input type=hidden name=fieldname value="'+fieldName+'">';
        cn += '<input type=hidden name=is_multi_fg value="'+is_multi_fg+'">';
        
	var hndiv = '<DIV id=hndiv style=""></DIV>';

        $("body").append(bgdiv + popdiv + hndiv);
        $("#hndiv").html(cn);

	return;
}



///////////////////
function renderObjectSelectorTable(fieldName, is_multi_fg){


	var orderHash = {};
	for (var objId in objListForSelection){
		for (var field in objListForSelection[objId]){
			orderHash[field] = 1000;
		}
	}
	orderHash["objId"] = 1;
	orderHash["version"] = 1001;
	
	var emType = (is_multi_fg == 1 ? 'checkbox' : 'radio');
	var cn = '<table width=100% style="font-size:13px;" border=0>';
	for (var objId in objListForSelection){
		var lbl = "";
		//var fields = Object.keys(objListForSelection[objId]).sort();
		var fields = Object.keys(objListForSelection[objId]).sort(function(a, b){return orderHash[a] - orderHash[b]});
		for (var i in fields){
			lbl += objListForSelection[objId][fields[i]] + ';';
		}	
		var val = objId + ' ' + lbl;
		var chkbox = '<input name=objids type="'+emType+'" value="'+val+'">';
		cn += '<tr style="background:#eee;"><td width=25 align=center>'+chkbox+'</td>' +
			'<td>'+lbl+'</td></tr>';
	}
	cn += '</table>';
	$("#popdiv2").html(cn);
	return;
}






///////////////////////
function searchTypes(){


	var emList  = $('.searchElement1A');
        var records = [];
        for(var i=0; i < emList.length; i++){
                records.push('"'+emList[i].name+'":"'+emList[i].value+'"');
        }
        var jsonText1 = records.join(",");
        var jsonText = '{' + jsonText1 +  '}';

	$("#searchresults").html(getWaitMsg());

        var url = cgiRoot + '/servlet.cgi';
        var reqObj = new XMLHttpRequest();
        reqObj.open("POST", url, true);
        reqObj.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
	reqObj.onreadystatechange = function() {
                if (reqObj.readyState == 4 && reqObj.status == 200) {
                        //console.log('response='+reqObj.responseText);
			var jsonResponse = JSON.parse(reqObj.responseText);
                        if(jsonResponse["taskStatus"] == 1){
                                var objList1 = jsonResponse["searchResults"];
				var listCount = objList1.length;
				$("#searchstats").css("display", "");
                                $("#searchstats").css("background", "#fff");
                                $("#searchstats").css("color", "#777");
                                $("#searchstats").html('Total of ' + listCount + ' types retrieved.');
				$("#searchresults").html(getSearchResults(objList1, jsonResponse["readOnly"]));
			}
                        else{
                                $("#searchstat").css("display", "");
                                $("#taskstatus").html(jsonResponse["errorMsg"]);
                        }
                }
        };

	var postData = 'mode=json&svc=searchTypes&jsonText=' + jsonText;
	console.log('request='+postData);
        reqObj.send(postData);
}


////////////////////
function getSearchResults(objList1, readOnly){



	var s1 = 'text-decoration:none;font-size:11px;';
	var s2 = 'padding:0 0 20 10;';
	var s3 = 'padding:5 0 0 10;font-weight:bold;border-top:1px solid #f1f1f1;';
	var s4 = 'padding:0 0 0 10;color:#777;';
	var s5 = 'padding:0px 10px 0px 10px;font-weight:bold;';
	var s6 = 'padding:0px 10px 0px 10px;';
	var divstyle1 = 'position:relative;width:100%;height:100px;border:1px solid #ccc;';
        var divstyle2 = 'position:absolute;left:0px;top:0px;width:100%;height:100%;overflow:auto;';
        

	var rows1 = '';
	var rows2 = '';
	for (var i in objList1){
		var urlBase = (moduleVersion == 'tst' ? '/tst/' + moduleBase : '/' + moduleBase);
		var url = urlBase + '/create/' + objList1[i]["type_id"] + '/';
                var createLink = '<a href="'+url+'" class=blue13>Create new object</a>';
		createLink = (readOnly ? '' : createLink);	
		var lbl = 'TypeID ' + objList1[i]["type_id"] + '<br>' 
		lbl += objList1[i]["title"] + ' ['+objList1[i]["name"] + ']';
		var rows = '<tr><td style="'+s3+'" width=60%>'+ lbl + 
				'</td><td style="'+s3+'" align=right valign=bottom>'+createLink+'</td></tr>';
		rows += '<tr><td style="'+s4+'" colspan=2>'+ objList1[i]["description"] + '</td></tr>';
		
		var objList3 = objList1[i]["object_field_names"];
		var objTable = '<table style="font-size:13px;" border=0>';
		objTable += '<tr style="background:#eee;">';
		for (var j in objList3){
			objTable += '<td style="'+s5+'" nowrap>' + objList3[j] + '</td>';
		}
		objTable += '</tr>';
		var objList4 = objList1[i]["object_field_values"];

		for (var j in objList4){ 
			objTable += '<tr style="background:#eee;">';
			var urlBase = (moduleVersion == 'tst' ? '/tst/' + moduleBase : '/' + moduleBase);
			var url = urlBase + '/view/' + objList4[j][0] + '/';
			var link = '<a href="'+url+'" style="text-decoration:none;">'+objList4[j][0]+'</a>';
			objTable += '<td style="'+s6+'" nowrap>' + link + '</td>';
			for (var k=1; k < objList3.length; k++){
				objTable += '<td style="'+s6+'" nowrap>' + objList4[j][k] + '</td>';
			}
			objTable += '</tr>';
		}
		objTable += '</table>';

		var objectsDiv = '<DIV style="'+divstyle1+'"><DIV style="'+divstyle2+'">'+objTable+'</DIV></DIV>';
		objectsDiv = (objList3.length ? objectsDiv : 'No objects exist for this type!'); 
		rows += '<tr><td style="'+s2+';padding:5px 0px 30px 10px;" colspan=2>'+objectsDiv+'</td></tr>';
                
		rows1 += (objList3.length > 0 ? rows : '');
		rows2 += (objList3.length == 0 ? rows : '');
	}
	
	var table = '<table style="font-size:13px;" width=90% border=0>' +
                        '<tr><td colspan=2>&nbsp;</td></tr>' + rows1 + rows2 + '</table>';
	return table;

}	



/////////////////////////
function dupBiocomputeObject(){

	var jsonText = '{"typeId":' + typeId + ', "srcObjId":' + objId  + '}';

        var url = cgiRoot + '/servlet.cgi';
        var reqObj = new XMLHttpRequest();
        reqObj.open("POST", url, true);
        reqObj.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

	reqObj.onreadystatechange = function() {
                if (reqObj.readyState == 4 && reqObj.status == 200) {
                        //console.log('response='+reqObj.responseText);
                        var jsonResponse = JSON.parse(reqObj.responseText);
                        var taskMsg = '';
                        if(jsonResponse["taskStatus"] == 1){
                                $("#taskstatus").css("display", "");
                                $("#taskstatus").css("background", "green");
                                $("#taskstatus").css("color", "white");
                                var style = 'background:green;color:white;text-decoration:none;';
                                taskMsg = '<a href="" id=msgtxt style="'+style+'">Task completed successfully!</a>';
                        	objId = jsonResponse["objId"];
				$("#taskstatus").html(taskMsg);
				var url = '/' + moduleBase + '/view/' + objId + '/';
				var msg = 'Object duplicated, <a href="'+url+'">click here to edit';
				var table = '<table width=100%>' + 
					'<tr height=50><td>&nbsp;</td></tr>' +
					'<tr><td align=center>'+msg+'</td></tr>' + 
					'</table>';
				$("#pagecn").html(table);
			}
                        else{
                                $("#taskstatus").css("display", "");
                                var style = 'background:yellow;color:red;text-decoration:none;';
                                taskMsg = '<a href="" id=msgtxt style="'+style+'">' +
                                                jsonResponse["errorMsg"] + '</a>';
                        	$("#taskstatus").html(taskMsg);
			}
                }
        };

        var svc = 'duplicateObject';
        var postData = 'mode=json&svc='+svc+'&jsonText=' + jsonText;
        //reqObj.send(postData);
        console.log('request='+postData);



}




/////////////////////////
function saveBiocomputeObject(){

	var ignoredDomainList = ["provenance_domain",  "usability_domain"];

	var submitJson = {"type_id": parseInt(typeId)};
        if(objId){
                submitJson["object_id"] = parseInt(objId);
        }
	if (ignoredDomainList.indexOf(selectedDomain) == -1){
		submitJson[selectedDomain] = {};
	}
	


	var emList  = $('.formvalues');
	for(var i=0; i < emList.length; i++){
                var parts = emList[i].name.split(".");
		var fieldName = parts[0];
		if(["select-one"].indexOf(emList[i].type) != -1){
                        var jqSelector = '#' + emList[i].id + ' option';
                        var singleVal = "";
			var optHash = {};
			$(jqSelector).each(function() {
                                var val = $(this).text();
				if(fieldInfoHash["type"][fieldName] == "obj"){
					optHash = JSON.parse(val);
				}
				else{
					singleVal = val;
				}
                        });
			if(ignoredDomainList.indexOf(selectedDomain) == -1){
				submitJson[selectedDomain][fieldName] = (fieldInfoHash["type"][fieldName] == "obj" ? 
										optHash : singleVal);
			}
			else{
				submitJson[fieldName] = (fieldInfoHash["type"][fieldName] == "obj" ?
                                                                                optHash : singleVal);
			}
		}
		else if(["select-multiple"].indexOf(emList[i].type) != -1){
			var jqSelector = '#' + emList[i].id + ' option';
			var optList = [];
			var optHash = {};
			$(jqSelector).each(function() {
				var val = $(this).text();
				if(fieldInfoHash["type"][fieldName] == "obj"){
					optList.push(JSON.parse(val));
				}
				else{
					optList.push(val);
				}
			});
			 if(ignoredDomainList.indexOf(selectedDomain) == -1){
                                submitJson[selectedDomain][fieldName] = optList;
                        }
                        else{
                                submitJson[fieldName] = optList;
                        }
		}
		else{
			var fieldValue = emList[i].value;
                	fieldValue = fieldValue.replace("'", "`");
                	fieldValue = fieldValue.replace("\"", "`");
                	fieldValue = fieldValue.replace(";", "|");
			if (selectedDomain == "provenance_domain"){
                                submitJson[fieldName] = fieldValue;
                        }
                        else{
                                submitJson[selectedDomain][fieldName] = fieldValue;
                        }
		}
	}
	var jsonText = JSON.stringify(submitJson);
	//console.log(jsonText);


	var url = cgiRoot + '/servlet.cgi';
        var reqObj = new XMLHttpRequest();
        reqObj.open("POST", url, true);
        reqObj.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        reqObj.onreadystatechange = function() {
                if (reqObj.readyState == 4 && reqObj.status == 200) {
			//console.log('response='+reqObj.responseText);
			var jsonResponse = JSON.parse(reqObj.responseText);
			var taskMsg = '';
			if(jsonResponse["taskStatus"] == 1){
        			$("#taskstatus").css("display", "");
				$("#taskstatus").css("background", "green");
				$("#taskstatus").css("color", "white");
				var style = 'background:green;color:white;text-decoration:none;';
				taskMsg = '<a href="" id=msgtxt style="'+style+'">Task completed successfully!</a>';
				objId = (objId ? objId : jsonResponse["object_id"]);
				rowsHash = [{}, {}, {}];
				setEditPage();
			}
			else{
				$("#taskstatus").css("display", "");
				var style = 'background:yellow;color:red;text-decoration:none;';
				taskMsg = '<a href="" id=msgtxt style="'+style+'">' + 
						jsonResponse["errorMsg"] + '</a>';
			}
			$("#taskstatus").html(taskMsg);
		}
        };


	
	
	var svc = (objId == '' ? 'createObject' : 'saveObject');
        var postData = 'mode=json&svc='+svc+'&jsonText=' + jsonText;
        reqObj.send(postData);
        console.log('request='+postData);

}




////////////////////////////
function setPageCn(pageid, typeId, objId){
 

	$("#searchboxcn").html(getSearchBoxCn());
	if(pageid == 'search'){
                setTypeSearchPage();
        }
	else if(pageid == 'create'){
		setCreatePage();
	} 
     	else if(pageid == 'view'){
		if (readOnly == 0){
			setEditPage();
        	}
		else{
			setViewPage();
		}
	}
	else{
         	setHtmlContent('/content/page.'+pageid+'.html');
     	}

}


///////////////////
function setHtmlContent(fileName){

	var url = htmlRoot + '/' + fileName;
        var reqObj = new XMLHttpRequest();
        reqObj.open("GET", url, true);
        reqObj.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        reqObj.onreadystatechange = function() {
                if (reqObj.readyState == 4 && reqObj.status == 200) {
			$("#pagecn").html(reqObj.responseText);
                }
        };
        reqObj.send();
}


///////////////////////
function setObjectSearchPage(){

        var s2 = "display:none;font-size:10px;padding:0 15 5 10;background:#FFFF00;color:#FF0000;";
        var s1 = 'padding:10 5 5 10;font-size:11px;color:#777;';

	var cn = '<table width=98% style="font-size:13px;" border=0>' +
			'<tr height=30 class=evenrow><td id=filterobjects style="'+s1+'"></td></tr>' +
			'<tr><td id=objectlist></td></tr></table>';
	$("#pagecn").html(cn);

	getFilterObjectsForm();
	return;
}


/////////////////////
function getFilterObjectsForm(){
	
	var url = cgiRoot + '/servlet.cgi';
        var reqObj = new XMLHttpRequest();
        reqObj.open("POST", url, true);
        reqObj.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        reqObj.onreadystatechange = function() {
                if (reqObj.readyState == 4 && reqObj.status == 200) {
                        //console.log('response='+reqObj.responseText);
                        objList1 = JSON.parse(reqObj.responseText);
			readOnly = (objList1["readOnly"] == 1 ? 1 : 0);
			var typeName = '';
			var slist = '';
                        for (key1 in objList1){
                                if(key1 == typeId){
                                	typeName = objList1[typeId]["name"];
					var fieldList = objList1[typeId]["fields"];
					var fields = ['objId=objId'];
					for (var i in fieldList){
						fields.push(fieldList[i].name + '=' + fieldList[i].name); 
					}		
					slist = fields.join(",");
				}
                        }
			var typeInfo = '<b>' + typeId + '</b>';
			
        		var emInfoObj = {type:"select", label:"",style:"width:200px;", readonly:false, list:slist};
        		var inBox1A = getInputElement("orderfield1", "searchElement1A", "", emInfoObj);
			
			var slist = 'DESC=DESC,ASC=ASC';
			var emInfoObj = {type:"select", label:"",style:"width:100px;", readonly:false, list:slist};
                        var inBox1B = getInputElement("ordertype1", "searchElement1A", "", emInfoObj);


        		var s = 'width:80px;';
        		var searchbtn = '<input type=submit class=searchbtncls name=searchbtn style="'+s+ 
						'" value=" Filter ">';
        		
			var args = 'gpageid=12&pageid=13&typeId='+typeId;
                        var createLink = '<a href="?'+args+'" class=blue13>Create new object</a>';
			var typeInfo = '<b>' + typeName + ' ['+typeId+']' + '</b>';
        		var cn = '<table width=100% style="font-size:13px;" border=0>' + 
				'<tr><td>List of objects for type '+typeInfo+'<br><br>&nbsp;Order By<br>' +
                                	inBox1A+ '&nbsp;' + inBox1B + 
					'</td><td align=right style="padding:0 10 0 0;" valign=bottom>' + 
						createLink + 
				'</td></tr></table>';

			$("#filterobjects").html(cn);
                	getObjectList();
		}
        };
        var postData = 'mode=json&svc=getType&typeId='+typeId;
	reqObj.send(postData);
        //console.log('request='+postData);


}


/////////////////////////
function getObjectList(){

	var url = cgiRoot + '/servlet.cgi';
        var reqObj = new XMLHttpRequest();
        reqObj.open("POST", url, true);
        reqObj.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        reqObj.onreadystatechange = function() {
                if (reqObj.readyState == 4 && reqObj.status == 200) {
                        //console.log('response='+reqObj.responseText);
                        var jsonObj = JSON.parse(reqObj.responseText);
                        var objList = jsonObj["objlist"];
			var vList = [];
			var seen = {};
			for (var i in objList){
                                var fieldList = objList[i]["fieldlist"];
                                vList[i] = {};
				vList[i]["objId"] = objList[i]["id"];
				seen["objId"] = 1;
				for (var j in fieldList){
					vList[i][fieldList[j]["name"]] = fieldList[j]["value"];
					seen[fieldList[j]["name"]] = 1;
				}
			}

			var table = '<table width=98% style="font-size:13px;" border=0>';
			var cells = '';
                        var s = 'padding:0 5 0 5;font-weight:bold;';
                        for (var fieldName in seen){
				cells += '<td nowrap style="'+s+'">'+fieldName+'</td>'
			}
			table += '<tr height=25 style="background:#ccc;">' + cells + '</tr>';
			var s = 'padding:0 5 0 5;';
			for (var i in vList){
				var cells = '';
				for (var fieldName in seen){
					var val = (vList[i][fieldName] == undefined ? '' : vList[i][fieldName]);
					if(fieldName == "objId"){
						var args = '?gpageid=12&pageid=14&typeId='+typeId+'&objId='+val;
						val = '<a href="'+args+'" class=regular13>'+val+'</a>';
					}
					cells += '<td nowrap style="'+s+'">'+val+'</td>'; 
				}
				var editObjLink = '<a href="?objId='+objList[i]["id"] + 
							'" class=regular13>Edit Object</a>'; 
				table += '<tr class=evenrow height=20>' + cells + '</tr>';
                        }
			table += '</table>';
			var s1 = 'position:relative;width:99%;height:1000px;border:1px solid #ccc;';
			var s2 = 'position:absolute;width:100%;height:600px;overflow:auto;';
			var divs = '<br><DIV style="'+s1+'"><DIV style="'+s2+'">'+table+'</DIV></DIV>';
                        $("#objectlist").html(divs);
                }
        };

        var postData = 'mode=json&svc=getObjects&typeId=' + typeId;
        reqObj.send(postData);
        //console.log('request='+postData);

}

///////////////////////
function setTypeSearchPage(){

	var cn = '<table width=98% style="font-size:13px;" border=0>' +
		'<tr><td id=searchstats style="padding:0px 0px 0px 20px;" valign=top></td></tr>' +
		'<tr><td id=searchresults>dfdasfafa</td></tr>' +
		'</table>';
	$("#pagecn").html(cn);
	searchTypes();
}


/////////////////////////////
function setViewPage(){

	var url = cgiRoot + '/servlet.cgi';
        var reqObj = new XMLHttpRequest();
        reqObj.open("POST", url, true);
        reqObj.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        reqObj.onreadystatechange = function() {
                if (reqObj.readyState == 4 && reqObj.status == 200) {
                        //console.log(reqObj.responseText);
			var cn = '<DIV style="width:70%;padding:20px 0px 0px 20px;"><pre style="white-space:pre-wrap;">' + 
					reqObj.responseText + '</pre></DIV>';
			$("#pagecn").html(cn);
                }
        };
        var postData = 'mode=json&svc=getJsonView&objId='+objId;
        
	reqObj.send(postData);
        console.log('request='+postData);
}





/////////////////////////////
function setEditPage(){

	$("#pagecn").html(getWaitMsg());
	var url = cgiRoot + '/servlet.cgi';
        var reqObj = new XMLHttpRequest();
        reqObj.open("POST", url, true);
        reqObj.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        reqObj.onreadystatechange = function() {
                if (reqObj.readyState == 4 && reqObj.status == 200) {
			//console.log(reqObj.responseText);
			objList1 = JSON.parse(reqObj.responseText);
			readOnly = (objList1["readOnly"] == 1 ? 1 : 0);
			typeId = objList1["typeId"];
			topTypeId = typeId;
			if(readOnly == 1){
				setViewPage();
				return;
			}
                       	for (key1 in objList1){
				if(key1 == typeId){
                                       	var objList2 = objList1[typeId];
                                       	loadEditForm(typeId, objList2, "edit");
				}
                       		for (var i in objList1[key1]["parent_id"]){
					var parentId = objList1[key1]["parent_id"][i];
					loadLineage(parentId, objList1[parentId], "edit");
				}
			}
			setTabCn();
		}
        };
        var postData = 'mode=json&svc=getSingleObject&objId='+objId;
        reqObj.send(postData);
}



/////////////////////////////////
function setTabCn(){


	$("#pagecn").html(getWaitMsg());

	var table1 = '';
	var objList2 = objList1[typeId];
	table1 += (objList2 != undefined ? getFormHeader(objList2, "edit") : "");


	var style1 = 'font-size:13px;';
	style1 += (selectedDomain in rowsHash[0] ? "background:#f1f1f1;" : "");
	var style2 = 'border:0px solid #fff;';
	var table2 = '<table style="'+style1+'" width=100% border=0>';
	table2 += '<tr><td style="'+style2+';padding:0 0 0 15;" width=40% valign=top>';
	table2 += (selectedDomain in rowsHash[0] ? rowsHash[0][selectedDomain] : "");
	table2 += '</td><td valign=top style="'+style2+'" width=30%>';
	table2 += (selectedDomain in rowsHash[1] ? rowsHash[1][selectedDomain] : "");
	table2 += '</td><td valign=top style="'+style2+'">';
	table2 += (selectedDomain in rowsHash[2] ? rowsHash[2][selectedDomain] : "");
	table2 += '</td></tr>';
	table2 += '</table>';

                        
	var errorTable = '<table align=center width=100%><tr height=200>' +
		'<td valign=middle align=center style="color:red;">'+
		objList1["errorMsg"]+'</td></tr></table>';
                        
	var cn = (objList1["errorMsg"] ? errorTable : table1 + table2);
	$("#pagecn").html(cn); 

	
}

///////////////////////////////
function setCreatePage(){


	$("#pagecn").html(getWaitMsg());


	var url = cgiRoot + '/servlet.cgi';
	var reqObj = new XMLHttpRequest();
	reqObj.open("POST", url, true);
	reqObj.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
	reqObj.onreadystatechange = function() {
		if (reqObj.readyState == 4 && reqObj.status == 200) {
			//console.log('response='+reqObj.responseText);
			objList1 = JSON.parse(reqObj.responseText);
			readOnly = (objList1["readOnly"] == 1 ? 1 : 0);
                        topTypeId = typeId;
			var table1 = '';
			for (key1 in objList1){
				if(key1 == typeId){
					var objList2 = objList1[typeId];
					table1 += getFormHeader(objList2, "create");
					loadEditForm(typeId, objList2, "create");
				}
				for (var i in objList1[key1]["parent_id"]){
					var parentId = objList1[key1]["parent_id"][i];
					if(parentId){
						loadLineage(parentId, objList1[parentId], "create");
					}
				}
				var style1 = 'font-size:13px;background:#f1f1f1;';
                        	var style2 = 'border:0px solid #fff;';
                        	var table2 = '<table style="'+style1+'" width=100% border=0>';
                        	table2 += '<tr><td style="'+style2+';padding:0 0 0 15;" width=40% valign=top>';
                        	table2 += (selectedDomain in rowsHash[0] ? rowsHash[0][selectedDomain] : "");
                        	table2 += '</td><td valign=top style="'+style2+'" width=30%>';
                        	table2 += (selectedDomain in rowsHash[1] ? rowsHash[1][selectedDomain] : "");
                        	table2 += '</td><td valign=top style="'+style2+'">';
                        	table2 += (selectedDomain in rowsHash[2] ? rowsHash[2][selectedDomain] : "");
                        	table2 += '</td></tr>';
                        	table2 += '</table>';

                        	var errorTable = '<table align=center width=100%><tr height=200>' +
                                	'<td valign=middle align=center style="color:red;">'+
                                	objList1["errorMsg"]+'</td></tr></table>';
                        	var cn = (objList1["errorMsg"] ? errorTable : table1 + table2);
                        	$("#pagecn").html(cn);

			}
		}
	};
	var postData = 'mode=json&svc=getType&typeId='+typeId;
	reqObj.send(postData);
	console.log('request='+postData);
}



///////////////////////////////
function getFormHeader(objList2, mode){



	var dupbtn = '';
	var jsonViewLink = '';
	var saveLabel = 'Submit to create';
	if (mode == 'edit'){
		//dupbtn = '<input type=submit class=dupbtncls name=dupbtn style="padding:5 20 5 20;" ' +
                //                                        'value="Make a copy">';
        	//dupbtn += '<input type=hidden class="typeElement1" name=typeId value="'+typeId+'">';
        	//dupbtn += '<input type=hidden class="typeElement1" name=objId value="'+objId+'">';
		jsonViewLink = '<a id=jsonview href="" class=blue11>View in JSON format</a>';
		saveLabel = 'Save object';
	}

	var savebtn = '<input type=submit class=savebtncls name=savebtn style="padding:5 20 5 20;" ' +
                                                        'value="'+saveLabel+'">';
        savebtn += '<input type=hidden class="typeElement1" name=typeId value="'+typeId+'">';
        savebtn += '<input type=hidden class="typeElement1" name=objId value="'+objId+'">';


	savebtn = (readOnly == 1 ? '' : savebtn);
	dupbtn = (readOnly == 1 ? '' : dupbtn);


	var creator = ("createdBy" in objList2 ? objList2["createdBy"] : "N/A");
	var authorInfo = 'Created by ' + creator  + ' on ' + objList2["createdTs"];
                   
 	var msg = 'You need to login and have privilege to edit/create record';
	var style = "background:yellow;font-size:11px;color:red;padding:3 10 3 0;";

	msg = (readOnly == 1 ? msg : '');




	var typeName = objList2["name"];
	var style1 = "padding:0 0 0 15;font-weight:bold;";
      	var style2 = "background:#FFFF00;color:#FF0000;";
	var style3 = "padding:0 15 0 0;text-align:right";
	var tabstyle = "font-size:13px;background:#fff;";
	
	style2 += (msg ? "" : "display:none;");

	var table2 = '<table width=100% style="'+tabstyle+'" cellspacing=1 border=0>' + 
			'<tr height=10><td colspan=4 align=right>' + jsonViewLink + '</td><td></td></tr>' +
			'<tr><td align=right id=taskstatus style="'+style2 + '" colspan=5>'+msg+'</td></tr>' + 
			'</table>';

	var domainList1 = [{"key":"provenance_domain", "title":"Provenance domain"},
				{"key":"usability_domain", "title":"Usability domain"},
				{"key":"description_domain", "title":"Description domain"},
				{"key":"execution_domain", "title":"Execution domain"},
				{"key":"parametric_domain", "title":"Parametric domain"},
				{"key":"io_domain", "title":"Input/output domain"},
				{"key":"error_domain", "title":"Error domain"}
			]; 
	var domainList2 = [{"key":"provenance_domain", "title":"Provenance domain"}];
	var domainList = (mode == "create" ? domainList2 : domainList1);


	var table3 = '<table width=100% style="'+tabstyle+';border-bottom:1px solid #ccc;" cellpadding=0 cellspacing=1 border=0>';
	table3 += '<tr>';
	if(objList1[typeId]["parent_name"].indexOf("biocompute") != -1){
		for (var i in domainList){
			var cls = (domainList[i].key == selectedDomain ? "formsection2" : "formsection1");
			table3 += '<td  id="'+domainList[i].key+'" class="'+cls+'">'+domainList[i].title+'</td>';
		}
	}
	else{
		table3 += '<td></td>';
	}
	table3 += '<td align=right style="background:#eee;">' + dupbtn + '&nbsp;&nbsp;'  + savebtn+'</td>';
	table3 += '</tr>';
	table3 += '</table><br>';


	return table2 +  table3;
}

///////////////////////////
function loadEditForm(typeId, objList2, mode){




	var s1 = 'padding:3 3 3 3;';
        var s2 = 'padding:3 3 3 3;width:80%;background:#f1f1f1;';
        var s3 = 'padding:0 0 0 0;background:#f1f1f1;';

	//var readOnlyFlag = (mode == "edit" ? true : false);
	var readOnlyFlag = false;

	var emInfo = {};
	var s = 'padding:3 3 3 3;width:400;background:#fff;';
	emInfo["string"] = {group:1, type:"textarea", label:"", style:s, readonly:readOnlyFlag};
	emInfo["text"] = {group:1, type:"textarea", label:"", style:s, readonly:readOnlyFlag};
	var s = 'padding:3 3 3 3;width:100;background:#fff;';
	emInfo["textshort"] = {group:1, type:"text", label:"", style:s, readonly:readOnlyFlag};

	var s = 'padding:3 3 3 3;width:80px;background:#fff;';
	emInfo["integer"] = {group:1, type:"number", label:"", style:s, readonly:readOnlyFlag};
	emInfo["real"] = {group:1, type:"number", label:"", style:s, readonly:readOnlyFlag};


	var s = 'padding:3 3 3 3;width:100px;color:#000;background:#fff;';
        emInfo["choice"] = {group:1, type:"choice", label:"", style:s, readonly:readOnlyFlag};


	var s = 'padding:3 3 3 3;width:200px;background:#fff;height:75px;';
	emInfo["obj"] = {group:1, type:"select-multi", label:"", style:s, readonly:readOnlyFlag, list:""};



	
	var objList3 = objList2["fields"];


	var isParent = {};
	var parentHash = {"parametric_domain":"N/A", "execution_domain":"N/A",
                "usability_domain":"usability_domain", 
		//"error_domain":"error_domain",
                "error_domain":"N/A",
		"empirical_error":"error_domain",
		"algorithmic_error":"error_domain",
		"name":"provenance_domain", "title":"provenance_domain", "version":"provenance_domain",
                "verification_status":"provenance_domain", "publication_status":"provenance_domain",
                "keywords":"provenance_domain",
                "driver":"execution_domain","script":"execution_domain",
		"platform":"execution_domain",
		"software_prerequisites":"execution_domain", 
		"domain_prerequisites":"execution_domain",
		"external_references":"provenance_domain",
                "digital_signature":"provenance_domain", "authors":"provenance_domain", "":"provenance_domain",
		"io_domain":"N/A",
		"description_domain":"N/A", 
		"xref":"description_domain", "keywords":"description_domain", "pipeline_steps":"description_domain",
		"fhir_extension":"description_domain", "github_extension":"description_domain"};



	var execObjId = 0;
	for (key3 in objList3){
		var fName = objList3[key3]['name'];
		if(fName == "execution_domain"){
			//execObjId = parseInt(objList3[key3]["field_value"][0].split("=")[0]);
			execObjId = 1237;
		}
		if(objList3[key3]['parent']){
			isParent[objList3[key3]['parent']] = 1;	
		}
		if(!(fName in parentHash) && 'parent' in objList3[key3]){
			parentHash[fName] = objList3[key3]['parent'];
			
		}
		//if(objList1[topTypeId]["parent"] != "biocompute"){
		if(objList1[topTypeId]["parent_name"].indexOf("biocompute") == -1){
			parentHash[fName] =  "provenance_domain";
		}
	}



	var fwidthHash = {"version":60, "digital_signature":250, "name":400, "title":400 };
        var s1 = 'padding:0 0 0 15;';
	var cn = '';
	var rows = '';
	for (var key2 in objList2){
		if(key2 == 'fields'){
			var objList3 = objList2[key2];
			var skeyList = Object.keys(objList3).sort(function(a, b){ 
						return objList3[a]['order'] - objList3[b]['order']});
			var fieldCount = 0;
			for (var k in skeyList){
				var key3 = skeyList[k];
				if(objList3[key3]['is_hidden_fg'] == 0 || 
					objList3[key3]['is_hidden_fg'] == undefined){
					var fName = objList3[key3]['name'];
					var fieldName = objList3[key3]['name'] + '.' + typeId;
					var fieldType = objList3[key3]['type'];
					var fieldParent = parentHash[fName];
					fieldCount += 1;
					fieldInfoHash["type"][fName] = fieldType;
					fieldInfoHash["is_multi_fg"][fName] = objList3[key3]['is_multi_fg'];
					var fieldValue = (objList3[key3]['field_value'] ? 
								objList3[key3]['field_value'] :
								objList3[key3]['default_value']);

					if (fieldType == "obj" && objList3[key3]['is_multi_fg'] == 1){
						var vList = [];
						for (var k in fieldValue){
							vList.push(JSON.stringify(fieldValue[k]));
						}
						fieldValue = vList;
					}
					else if (fieldType == "obj" && objList3[key3]['is_multi_fg'] == 0){
                                                fieldValue = [JSON.stringify(fieldValue)];
					}
					isMulti[objList3[key3]['name']] = objList3[key3]['is_multi_fg'];
					 
					var emClass = "formvalues";
					var infoObj = (fieldType in emInfo ? emInfo[fieldType] : emInfo["string"]);
					if(fieldType in emInfo && objList3[key3]['is_multi_fg'] == 1){
						emInfo[fieldType].list = fieldValue;
						var s = 'padding:3 3 3 3;width:80%;background:#fff;height:200px;';
        					infoObj = {group:1, type:"select-multi", label:"", 
								style:s, readonly:readOnlyFlag, list:fieldValue};
					}	
					else if (fieldType in emInfo && fieldType=='obj'){
						emInfo[fieldType].list = fieldValue;
						var s = 'padding:3 3 20 3;width:80%;background:#fff;height:50px;';
						infoObj = {group:1, type:"select-one", label:"",
                                                                style:s, readonly:readOnlyFlag, list:fieldValue};
					}
					if(objList3[key3]['constraint'] == "choice"){
						infoObj = emInfo["choice"];
						infoObj["constraint_data"] = objList3[key3]['constraint_data']
					}	
					if(fName in fwidthHash){
						infoObj = emInfo["textshort"];
						infoObj.style += "width:" + fwidthHash[fName] + 'px;';
					}	


					var inputBox = getInputElement(fieldName, emClass, fieldValue, infoObj);
					var fieldlbl = objList3[key3]['title'] + ' [' + objList3[key3]['name'] + '] ';

					fieldlbl += (objList3[key3]['is_multi_fg'] == 1 ? ' (multi ' : 
									' (single ');	
					fieldlbl += fieldType + ')';
					var imgUrl = ghtmlRoot + '/imglib/helpicon.png';
        				fieldlbl += ' <img class=helpicon id="span_'+fieldCount+'" src="'+imgUrl + 
								'" width=13>';
					fieldlbl += '<span class=fieldhelp id="span_'+fieldCount+'_text"><br>' +
                                                      objList3[key3]['description'] + '</span>';
                                        
					var emId = fieldName.split(".").join("_");

					if (infoObj["type"] == 'select-multi' || (infoObj["type"] == 'select-one' && 
						fieldType=='obj')){
						var id1 = 'add_'+emId;
						var id2 = 'rmfrm_'+emId;
						//var cls1 = "addfreetxtvalue";
                                                var cls1 = "addeditcontainer";
						var cls2 = "rmfreetxtvalue";
                                                var lbl1 = "Add";
                                                var lbl2 = "Remove";

						var disable = (readOnly ? "disable" : "");	
						var href = 'href="?is_multi_fg='+objList3[key3]['is_multi_fg']+'"';
						var link1 = '';
						link1 += '<a class="'+cls1+'" id="'+id1+'" '+href+'>'+lbl1+'</a>';
						link1 += '&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;';
						link1 = (infoObj["type"] != 'select-multi' ? "" : link1);
	
                                        	var link2 = '<a class="'+cls2+'" id="'+id2+'" '+href+'>'+lbl2+'</a>';
						
						var id3 = 'edit_'+emId;
						//var cls3 = 'editfreetxtvalue';
						var cls3 = "addeditcontainer";
						var link3 = '<a class="'+cls3+'" id="'+id3+'" '+href+'>Edit</a>';
						link3 += '&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;';
				
	
						var id4 = 'movup_'+emId;
                                                var cls4 = 'movefreetxtvalue';
                                                var link4 = '<a class="'+cls4+'" id="'+id4+'" '+href+'>Up</a>';
                                                link4 += '&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;';
						link4 = (infoObj["type"] != 'select-multi' ? "" : link4);

						var id5 = 'movdn_'+emId;
                                                var cls5 = 'movefreetxtvalue';
                                                var link5 = '<a class="'+cls5+'" id="'+id5+'" '+href+'>Down</a>';
                                                link5 += '&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;';
						link5 = (infoObj["type"] != 'select-multi' ? "" : link5);

	

						link1 = (readOnly == 1 ? '' : link1);
						link2 = (readOnly == 1 ? '' : link2);
						link3 = (readOnly == 1 ? '' : link3);
						link4 = (readOnly == 1 ? '' : link4);
						link5 = (readOnly == 1 ? '' : link5);
						inputBox += '<br>&nbsp;&nbsp;&nbsp;' + link3 + 
								 link4 + link5 + link1 +  link2; 
					}
					var cell =   fieldlbl + '<br>' +  inputBox ;
					//var row = '<tr><td style="padding:0 0 0 15;"><br>'+cell+'<br></td></tr>';
					var row = '<br>' + cell + '<br>';
					row = (isParent[objList3[key3]['name']] ? '' : row);
                                        
					var grp = 0;
					grpHash1 = {"list":2, "obj":1};
					grpHash2 = {"version":1, "digital_signature":1, "reference_files":0,
							"input_subdomain":1, "output_subdomain":2,
							"execution_domain":0,"authors":0, 
							"pipeline_version":1, "pipeline_url":1,
							"env_parameters":1, "software_prerequisites":1,
							"domain_prerequisites":2,
							"xref":0,"keywords":1, "pipeline_steps":2,
							"empirical_error":0, "algorithmic_error":1}
					grp = (fieldType in grpHash1 ? grpHash1[fieldType] : grp);
					grp = (fName in grpHash2 ? grpHash2[fName] : grp);
					//grp = (objList1[topTypeId]["parent"] != "biocompute" ? 0 : grp);
					grp = (objList1[topTypeId]["parent_name"].indexOf("biocompute") == -1 ? 0 : 
											grp);
					var delim = '<span style="color:#ccc;">-----------------'+ 
						'-------------------------------------</span>';
					if(fieldParent != "N/A"){
						rowsHash[grp][fieldParent] = (fieldParent in rowsHash[grp] ?
                                                                        rowsHash[grp][fieldParent] +
                                                                        '<br>' +  row + delim : row + delim);
					}
				}
			}
		}
	}

	
	return;
}







//////////////////////////
function loadLineage(typeId, objList2, mode){


	//if (typeId in seenNode){
	if (typeId in seenNode || objList2["name"] == 'base' || objList2["name"] == 'process'){
		return '';
	}
	seenNode[typeId] = 1;

	loadEditForm(typeId, objList2, mode);
	//var parentIdList = objList2["parentIdList"].split(",");
	var parentIdList = objList2["parent_id"];
	for (var i in parentIdList){
		var parentId = parentIdList[i];
		if(parentId){
			loadLineage(parentId, objList1[parentId], mode);
		}
	}
	
	return;

}









/////////////////
function loadTreeData() {
     childList = {};
     isMain = {};
     nodeid2name = {};
     var out =  '';
     nodeid2name['root'] = 'Root';

     for(var i=0;i<treeJson.length;i++){
	var parentIdList = [];
	if (treeJson[i]['parent']){
	     parentIdList = treeJson[i]['parent'].split(",");
	 }
	var nodeId = treeJson[i]['_id'] ;
        nodeid2name[nodeId] = treeJson[i]['title'] + ' [' + treeJson[i]['name'] + ']';
        nodeid2index[nodeId] = i;
	for (var j=0; j<parentIdList.length; j++){
	      var parentId = parentIdList[j];
	      if(parentId in childList){childList[parentId] += ' ' + nodeId;}
              else if(nodeId != undefined){childList[parentId] = nodeId;}
         }
	 if(treeJson[i]['parent']  == ''){
	    isMain[nodeId] = 1;
         }
     }
}

function getTreeView(){

     var nodeList = Object.keys(isMain);
     var args = 'gpageid=' + gpageid + '&pageid=' + pageid + '&action=BrowseTreeTypeStep1';
     var link = '<a href="?'+args+'" id="root" class=nodelink >Root</a>';
     var table = '<table width=100% style="font-size:13px;"  border=0 cellpadding=10>';     
     table += '<tr height=30><td style="padding:10 0 10 20;">'; 
     table +=  link  + '</td></tr>';
     table += '<tr><td><ul style="padding:0 0 0 40px;">';

     for (j=0; j < nodeList.length; j++){
          nodeId = nodeList[j];
          var args = 'gpageid=' + gpageid + '&pageid=' + pageid + '&nodeid='+ nodeId;
          var link = '<a href="?'+args+'" id="'+nodeId+'" class=nodelink >' + nodeid2name[nodeId] + '</a>';
          table += '<li>' + link ;
          if(nodeId in childList){
                var list = childList[nodeId].split(' ');
                table += '<ul style="padding:0 0 0 40px;">';
                for(var i=0; i< list.length;i++){
                    var args = 'gpageid=' + gpageid + '&pageid=' + pageid;
                    args +=  '&nodeid='+ list[i];
                    var link = '<a href="?'+args+'" id="'+list[i]+'" class=nodelink >';
                    link +=  nodeid2name[list[i]] + '</a>';;
                    table += '<li>' + link + '</li>' ;
                }
                table += '</ul>';
            }
            table += '</li>';
      }
      table += '</ul></td></tr></table>';
      return table;

}




//////////////////////////
function getBranchView(branchId){

     	var nodeList = Object.keys(isMain);
     	var parentList = '';
     	nodeList.push(branchId);
     	fobjList = treeJson[nodeid2index[branchId]]['parent'].split(","); 
	for (key in fobjList){
         	pnodeId = fobjList[key];
		var args = 'gpageid=' + gpageid + '&pageid=' + pageid + '&nodeid='+ pnodeId;
          	var link = '<a href="?'+args+'" id="'+pnodeId+'" class=nodelink >' + nodeid2name[pnodeId] + '</a>';
          	link = (pnodeId ? link : '<a href="?'+'gpageid=' + gpageid + '&pageid=' + pageid+'"' + 
						' class=blue13>Root</a>');
		parentList += link + '; &nbsp;&nbsp; ';
     	}

     var args = 'gpageid=' + gpageid + '&pageid=' + pageid + '&action=BrowseTreeTypeStep1';
     var plink = '<a href="?'+args+'" id="11" class=section1 >Root</a>';
     parentList = (parentList ? parentList : plink);
      
     var table = '<table width=95% style="font-size:13px;"  border=0 cellpadding=10>';
     table += '<tr class=evenrow><td style="padding:5 0 5 20;"> Parent node(s)<br>';
     table +=  parentList;

     nodeId = branchId;
     var args = 'gpageid=' + gpageid + '&pageid=12';
     var parts = nodeId.split(".");
     var editLink = '<a href="?'+args+'" id="'+parts[1]+'" class=editnodelink> Edit type</a>';

     var args = 'gpageid=' + gpageid + '&pageid=' + pageid + '&nodeid='+ nodeId;
     var link = '<a href="?'+args+'" id="'+nodeId+'" class=nodelink style="color:#990000;">';
     link += nodeid2name[nodeId] + '</a>';
     table +=  '<br><br>Current node<br>' + link + '</td><td valign=bottom>'+editLink+'</td></tr>';
     var cn =  '';
     if(nodeId in childList){
        var list = childList[nodeId].split(' ');
        cn += '<ul style="padding:10 0 0 50px;">';
        for(var i=0; i< list.length;i++){
            var args = 'gpageid=' + gpageid + '&pageid=' + pageid;
            args +=  '&nodeid='+ list[i];
            var link = '<a href="?'+args+'" id="'+list[i]+'" class=nodelink >';
            link +=  nodeid2name[list[i]] + '</a>';;
            cn += '<li>' + link + '</li>' ;
        }
        cn += '</ul>';
      }
      
      if(cn == ''){
         cn = 'No children';
      }
      
      table += '<tr><td colspan=2>'+cn+'</td></tr></table>';
      return table;

}







///////////////////////
function getInputElement(emName, emClass, emValue, emObj){



	emValue = (emValue == 'None' ? '' : emValue); 
	var disabled = (emObj.readonly == true ? "disabled" : "")
	//emObj.style += (emObj.readonly == true ? "color:#999;" : "");

	var emId = emName.split(".").join("_");
              
	var elm = '';
	if (emObj.type == 'textarea'){
		elm += '<textarea name="'+emName+'" id="'+emId+'"  class="'+ 
				emClass+'" rows="'+ emObj.rows + '" cols="'+ emObj.cols + 
				'" style="' + emObj.style + '"';
		if (emObj.placeholder != undefined){
			elm += ' placeholder="'+emObj.placeholder+'"></textarea>';
		}
		else{
			elm += ' ">' + emValue+'</textarea>';
		}
	}
	else if (emObj.type == 'select'){
		var parts1 = emObj.list.split(",");
		elm += '<select name="'+emName+'" id="'+emId+'"  class="'+emClass+'" style="'+emObj.style+'">';
		for (var i=0; i < parts1.length; i++){
			var parts2 = parts1[i].split("=");
			var s = (parts2[0] == emValue ? 'selected' : '');
			elm += '<option value="'+parts2[0]+'" '+s+'>'+parts2[1]+'</option>';
		}
		elm += '</select>';
	}
	else if (emObj.type == 'select-one'){
		var parts1 = (emObj.list ? emObj.list : []);
                elm += '<select id="'+emId+'" name="'+emName+'" class="'+emClass+'" style="' +
                                emObj.style+'">';
                for (var i=0; i < parts1.length; i++){
                        var s = (i == 0 ? 'selected' : '');
                        var ii = i + 1;
                        elm += '<option value="'+ii+'" '+s+'>'+parts1[i]+'</option>';
                }
                elm += '</select>';
        }
	else if (emObj.type == 'select-multi'){
                var parts1 = (emObj.list ? emObj.list : []);
		elm += '<select multiple id="'+emId+'" name="'+emName+'" class="'+emClass+'" style="' + 
				emObj.style+'">';
		for (var i=0; i < parts1.length; i++){
			var s = (i == 0 ? 'selected' : '');
			var ii = i + 1;
			elm += '<option value="'+ii+'" '+s+'>'+parts1[i]+'</option>';
		}
                elm += '</select>';
	}
	else if (emObj.type == 'checkbox'){
		var s = (emValue == 1 ? 'checked' : '');
		elm += '<input type="'+emObj.type+'" name="'+emName+'" id="'+emId+'" '+s+' style="' +
                                        emObj.style+'" class="'+emClass+'" >';
	}
	else if (emObj.type == 'text' || emObj.type == 'number'){
		var valPhrase = (emObj.placeholder != undefined ? 'placeholder="'+emObj.placeholder+'"' :
                                'value="'+emValue+'"');
		elm += '<input type="'+emObj.type+'" name="'+emName+'" id="'+emId+'" '+ valPhrase+' style="' + 
					emObj.style+'" class="'+emClass+'"  '+disabled+'>';
		
		
	}
	else if (emObj.type == 'choice'){
		var comboList = emObj.constraint_data.split("|");
		elm += '<select id="'+emId+'" name="'+emName+'" class="'+emClass+'" style="' +
                                emObj.style+'">';
                for (var i=0; i < comboList.length; i++){
                        var parts = comboList[i].split("///");
			var s = (parts[1] == emValue ? 'selected' : '');
                        elm += '<option value="'+parts[1]+'" '+s+'>'+parts[0]+'</option>';
                }
                elm += '</select>';

	}
	else{
		
		var valPhrase = (emObj.placeholder != undefined ? 'placeholder="'+emObj.placeholder+'"' : 
				'value="'+emValue+'"');
		elm += '<input type="'+emObj.type+'" name="'+emName+'" id="'+emId+'" '+valPhrase +' style="' +
                                        emObj.style+'" class="'+emClass+'"  '+disabled + '>';
	}
	return elm;

}


////////////////////////////
function getWaitMsg(){

        var imgUrl = ghtmlRoot + '/imglib/loadingicon.gif';
        var imgObj = '<img src="'+imgUrl+'">';
        var cn = '<table width=100% height=400><tr><td valign=middle align=center>'+imgObj+'</td></tr></table>';
        return cn;
}




//////////////////////
function getUrlVariable(url, variable){
       

	var vars = url.substring(1).split("&");
       	for (var i=0;i<vars.length;i++) {
		var pair = vars[i].split("=");
		if(pair[0] == variable){return pair[1];}
       }
       return(false);
}


